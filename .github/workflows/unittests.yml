on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: "59 21 * * *"

jobs:
  unittests:
    name: (${{ matrix.os }}, ${{ matrix.env }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        env:
          [
            ci/38.yaml,
            ci/38-numba.yaml,
            ci/39.yaml,
            ci/39-numba.yaml,
            ci/310.yaml,
            ci/310-numba.yaml,
          ]
        include:
          - env: ci/310.yaml
            os: macos-latest
          - env: ci/310-numba.yaml
            os: macos-latest
          - env: ci/310.yaml
            os: windows-latest
          - env: ci/310-numba.yaml
            os: windows-latest

    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: ${{ matrix.env }}
          miniforge-version: latest
          miniforge-variant: Mambaforge
          use-mamba: true
          activate-environment: test

      - name: Check and Log Environment
        run: |
          conda info --all
          conda list
          conda config --show-sources
          conda config --show

      - name: Run pytest
        run: pytest mapclassify --cov mapclassify -v -n auto --doctest-modules --cov-config .coveragerc --cov-report xml --color yes --cov-append --cov-report term-missing

      - name: codecov (${{ matrix.os }}, ${{ matrix.env }})
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          name: mapclassify-codecov
